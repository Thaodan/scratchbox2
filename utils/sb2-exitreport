#!/bin/bash
#
# This script will be started by sb2-monitor after "everything has been done"
#
# Copyright (c) 2008 Nokia Corporation. All rights reserved.
# Author: Lauri T. Aarnio
# Licensed under LGPL version 2.1, see top level LICENSE file for details.

exit_reason=$1
exit_status=$2

if [ -z "$SBOX_MAPPING_LOGFILE" -o \
     -z "$exit_reason" -o -z "$exit_status" ]; then
	echo "ERROR: $0 is an internal tool for sb2, do not use directly"
	exit 1
fi

if [ "$exit_reason" == "exit" ]; then
	# Normal exit
	ret=$exit_status
else
	echo "Exit reason and status: $exit_reason $exit_status"
	ret=1
fi

# Turn off accounting, if it was enabled in the beginning.
if [ -n "$SBOX_COLLECT_ACCT_DATA" ]; then
	# First try to deactivate it directly
	sb2-show acct_off
	if [ $? != 0 ]; then
		echo "WARNING: Can't deactivate process accounting. Retrying with 'sudo', password may be needed."
		sudo sb2-show acct_off
		if [ $? != 0 ]; then
			echo "ERROR: Failed to deactivate process accounting. Please do it manually!"
		fi
	fi
fi

if [ -s "$SBOX_MAPPING_LOGFILE" ]; then
	# Logfile exists and is not empty
	# add reason and status to the logfile
	echo "# $* ($ret)" >> $SBOX_MAPPING_LOGFILE

	if [ -n "$SBOX_LOG_AND_GRAPH_DIR" ]; then
		echo "Post-processing the log and generating graphs to"
		echo "directory $SBOX_MAPPING_LOGFILE:"
		sb2_logz_acct_opt=""
		if [ -f $SBOX_LOG_AND_GRAPH_DIR/acct-data ]; then
			sb2_logz_acct_opt="-A $SBOX_LOG_AND_GRAPH_DIR/acct-data"
		fi
		sb2-logz -v $sb2_logz_acct_opt \
			-P $SBOX_LOG_AND_GRAPH_DIR/processses.dot \
			-E $SBOX_LOG_AND_GRAPH_DIR/exec.dot \
			< $SBOX_MAPPING_LOGFILE
		path_to_dot=`which dot`
		if [ -z "$path_to_dot" ]; then
			echo "Warning: 'dot' was not found, can't create .pdf files"
			echo "         ('graphviz' package is recommended to fix this)"
		else
			dot -Tpdf $SBOX_LOG_AND_GRAPH_DIR/processses.dot >$SBOX_LOG_AND_GRAPH_DIR/processses.pdf
			dot -Tpdf $SBOX_LOG_AND_GRAPH_DIR/exec.dot >$SBOX_LOG_AND_GRAPH_DIR/exec.pdf
		fi
		echo "Results are now in $SBOX_LOG_AND_GRAPH_DIR":
		ls -l $SBOX_LOG_AND_GRAPH_DIR
	else
		case "$SBOX_MAPPING_LOGLEVEL" in
		(error|warning|net)
			# Brief log, only error, warning and network-related messages.
			echo "Messages from sb2:"
			cat $SBOX_MAPPING_LOGFILE
			;;
		(*)
			# Larger log (maybe a debug log)
			echo "Log summary:"
			echo
			sb2-logz -v < $SBOX_MAPPING_LOGFILE
			echo
			echo "This log can be analyzed again by"
			echo "sb2-logz < $SBOX_MAPPING_LOGFILE"
			;;
		esac
	fi
elif [ -f "$SBOX_MAPPING_LOGFILE" ]; then
	# Log file exists, but is empty
	rm $SBOX_MAPPING_LOGFILE
fi

if [ -f $SBOX_SESSION_DIR/.joinable-session ]; then
	# The session was created with -S flag, don't clean it, but stay quiet
	echo >/dev/null
else
	# cleanup
	if [ -n "$SBOX_SESSION_DIR" -a -d "$SBOX_SESSION_DIR" ]; then
		rm -rf $SBOX_SESSION_DIR
	fi
fi

exit $ret
